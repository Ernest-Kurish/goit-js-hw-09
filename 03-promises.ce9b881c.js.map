{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAASF,SAASG,iBAAiB,SACnCC,EAAkBJ,SAASC,cAAc,kBACzCI,EAAiBL,SAASC,cAAc,iBACxCK,EAAcN,SAASC,cAAc,mBAwB3C,SAASM,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFF,EAAQ,CAAEH,WAAUC,UAEtBG,EAAO,CAAEJ,WAAUC,S,GAClBA,E,IAIP,SAASQ,EAAUC,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC7BU,EAAAtB,GAASuB,OAAOC,QAAQ,qBAAoCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,CAGpE,SAASc,EAASL,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC5BU,EAAAtB,GAASuB,OAAOI,QAAQ,oBAAmCF,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,CAxCnEP,EAAOuB,SAAQ,SAAAC,GACbA,EAAMC,MAAMC,QAAU,yD,IAGxB7B,EAAK4B,MAAMC,QAAU,kDAErB7B,EAAK8B,iBAAiB,UAEtB,SAA0BC,GACxBA,EAAEC,iBACF,IAAMC,EAASC,OAAO3B,EAAY4B,OAC9BC,EAAaF,OAAO7B,EAAgB8B,OAClCE,EAAYH,OAAO5B,EAAe6B,OAExClB,YAAW,WACT,IAAK,IAAIqB,EAAQ,EAAGA,GAASL,EAAQK,GAAS,EAC5C9B,EAAc8B,EAAOF,GAAYG,KAAKrB,GAAWsB,MAAMhB,GACvDY,GAAcC,C,GAEfD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst form = document.querySelector('.form');\nconst labels = document.querySelectorAll('label');\nconst firstDelayInput = document.querySelector('[name=\"delay\"]');\nconst delayStepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\n\nlabels.forEach(label => {\n  label.style.cssText = 'display: flex; flex-direction: column; font-weight: 700';\n});\n\nform.style.cssText = 'display: flex; gap: 1rem; align-items: flex-end';\n\nform.addEventListener('submit', handleFormSubmit);\n\nfunction handleFormSubmit(e) {\n  e.preventDefault();\n  const amount = Number(amountInput.value);\n  let firstDelay = Number(firstDelayInput.value);\n  const delayStep = Number(delayStepInput.value);\n\n  setTimeout(() => {\n    for (let index = 1; index <= amount; index += 1) {\n      createPromise(index, firstDelay).then(onResolve).catch(onReject);\n      firstDelay += delayStep;\n    }\n  }, firstDelay);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n}\n\nfunction onResolve({ position, delay }) {\n  Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onReject({ position, delay }) {\n  Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$labels","querySelectorAll","$ce04d3a99e08e73b$var$firstDelayInput","$ce04d3a99e08e73b$var$delayStepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$onResolve","param","$parcel$interopDefault","Notify","success","concat","$ce04d3a99e08e73b$var$onReject","failure","forEach","label","style","cssText","addEventListener","e","preventDefault","amount","Number","value","firstDelay","delayStep","index","then","catch"],"version":3,"file":"03-promises.ce9b881c.js.map"}