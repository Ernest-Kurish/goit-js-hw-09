{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAASF,SAASG,iBAAiB,SACnCC,EAAkBJ,SAASC,cAAc,kBACzCI,EAAiBL,SAASC,cAAc,iBACxCK,EAAcN,SAASC,cAAc,mBAwB3C,SAASM,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,GACFF,EAAQ,C,SAAEH,E,MAAUC,IAEtBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAC1BA,EAAM,G,CAIb,SAASQ,GAAUT,SAAEA,EAAQC,MAAEA,IAC7BS,EAAArB,GAASsB,OAAOC,QAAQ,qBAAqBZ,QAAeC,M,CAG9D,SAASY,GAASb,SAAEA,EAAQC,MAAEA,IAC5BS,EAAArB,GAASsB,OAAOG,QAAQ,oBAAoBd,QAAeC,M,CAxC7DP,EAAOqB,SAAQC,IACbA,EAAMC,MAAMC,QAAU,yDAAyD,IAGjF3B,EAAK0B,MAAMC,QAAU,kDAErB3B,EAAK4B,iBAAiB,UAEtB,SAA0BC,GACxBA,EAAEC,iBACF,MAAMC,EAASC,OAAOzB,EAAY0B,OAClC,IAAIC,EAAaF,OAAO3B,EAAgB4B,OACxC,MAAME,EAAYH,OAAO1B,EAAe2B,OAExChB,YAAW,KACT,IAAK,IAAImB,EAAQ,EAAGA,GAASL,EAAQK,GAAS,EAC5C5B,EAAc4B,EAAOF,GAAYG,KAAKnB,GAAWoB,MAAMhB,GACvDY,GAAcC,C,GAEfD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst form = document.querySelector('.form');\nconst labels = document.querySelectorAll('label');\nconst firstDelayInput = document.querySelector('[name=\"delay\"]');\nconst delayStepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\n\nlabels.forEach(label => {\n  label.style.cssText = 'display: flex; flex-direction: column; font-weight: 700';\n});\n\nform.style.cssText = 'display: flex; gap: 1rem; align-items: flex-end';\n\nform.addEventListener('submit', handleFormSubmit);\n\nfunction handleFormSubmit(e) {\n  e.preventDefault();\n  const amount = Number(amountInput.value);\n  let firstDelay = Number(firstDelayInput.value);\n  const delayStep = Number(delayStepInput.value);\n\n  setTimeout(() => {\n    for (let index = 1; index <= amount; index += 1) {\n      createPromise(index, firstDelay).then(onResolve).catch(onReject);\n      firstDelay += delayStep;\n    }\n  }, firstDelay);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n}\n\nfunction onResolve({ position, delay }) {\n  Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onReject({ position, delay }) {\n  Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$labels","querySelectorAll","$47d4ff9957288465$var$firstDelayInput","$47d4ff9957288465$var$delayStepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$onResolve","$parcel$interopDefault","Notify","success","$47d4ff9957288465$var$onReject","failure","forEach","label","style","cssText","addEventListener","e","preventDefault","amount","Number","value","firstDelay","delayStep","index","then","catch"],"version":3,"file":"03-promises.75b9ef1b.js.map"}